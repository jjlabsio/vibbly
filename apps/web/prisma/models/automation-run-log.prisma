model AutomationRunLog {
    id           String              @id @default(cuid())
    job          AutomationJob
    plan         AutomationPlan      @default(BASIC)
    trigger      AutomationTrigger   @default(VERCEL_CRON)
    status       AutomationRunStatus @default(IN_PROGRESS)
    startedAt    DateTime            @default(now()) @map("started_at")
    completedAt  DateTime?           @map("completed_at")
    durationMs   Int?                @map("duration_ms")
    errorMessage String?             @map("error_message")

    detectionCount Int? @map("detection_count")
    newSpamCount   Int? @map("new_spam_count")
    deletionCount  Int? @map("deletion_count")

    createdAt DateTime @default(now()) @map("created_at")
    updatedAt DateTime @updatedAt @map("updated_at")

    automationRunAccountMetric AutomationRunAccountMetric[]
    commentDetectRun           Comment[]                    @relation(name: "comment_detect_run")
    commentDeleteRun           Comment[]                    @relation(name: "comment_delete_run")

    @@index([job, startedAt])
    @@index([status])
    @@map("automation_run_logs")
}

model AutomationRunAccountMetric {
    id                      String @id @default(cuid())
    runId                   String @map("run_id")
    socialAccountExternalId String @map("social_account_external_id")
    userId                  String @map("user_id")

    detectionCount Int? @map("detection_count")
    newSpamCount   Int? @map("new_spam_count")
    deletionCount  Int? @map("deletion_count")

    createdAt DateTime @default(now()) @map("created_at")

    run           AutomationRunLog @relation(fields: [runId], references: [id], onDelete: Cascade)
    socialAccount SocialAccount    @relation(fields: [socialAccountExternalId], references: [externalId], onDelete: Cascade)
    user          User             @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@map("automation_run_account_metrics")
}

enum AutomationJob {
    DETECT
    DELETE
}

enum AutomationPlan {
    BASIC
    PREMIUM
}

enum AutomationTrigger {
    VERCEL_CRON
    USER
}

enum AutomationRunStatus {
    IN_PROGRESS
    SUCCESS
    WARNING
    ERROR
}
