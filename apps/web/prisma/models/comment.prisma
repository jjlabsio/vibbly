enum CommentStatus {
    Active
    SpamPendingDelete
    Deleted
    SpamExcluded // 유저가 삭제하지 않기로 결정한 댓글
}

model Comment {
    id                      String        @id
    socialAccountExternalId String        @map("social_account_external_id")
    contentId               String        @map("content_id")
    authorDisplayName       String        @map("author_display_name")
    textDisplay             String        @map("text_display")
    textOriginal            String        @map("text_original")
    publishedAt             DateTime      @map("published_at")
    status                  CommentStatus
    detectRunId             String?       @map("detect_run_id")
    deleteRunId             String?       @map("delete_run_id")
    createdAt               DateTime      @default(now()) @map("created_at")

    detectRun     AutomationRunLog? @relation(name: "comment_detect_run", fields: [detectRunId], references: [id], onDelete: Cascade)
    deleteRun     AutomationRunLog? @relation(name: "comment_delete_run", fields: [deleteRunId], references: [id], onDelete: Cascade)
    socialAccount SocialAccount     @relation(fields: [socialAccountExternalId], references: [externalId])

    @@map("comments")
}
